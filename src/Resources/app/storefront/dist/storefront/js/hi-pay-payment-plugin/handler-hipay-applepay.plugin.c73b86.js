"use strict";(self.webpackChunk=self.webpackChunk||[]).push([["handler-hipay-applepay.plugin"],{366:(e,t,n)=>{n.r(t),n.d(t,{default:()=>a});class a extends window.PluginBaseClass{init(){let e={api_apple_pay_username:this.options.username,api_apple_pay_password:this.options.password,merchantId:this.options.merchantId,environment:this.options.environment,lang:this.options.lang,countryCode:this.options.countryCode,currency:this.options.currency,buttonType:this.options.styles.buttonType,buttonStyle:this.options.styles.buttonStyle,totalAmount:this.options.amount.toString(),shopName:this.options.shopname};document.querySelector("#tos").checked=!1;let t=document.querySelector("#confirmFormSubmit");t&&t.remove(),this._form=document.querySelector("#"+this.options.idResponse).form,document.querySelector("#apple-pay-button").style.display="none",this._hfInstance=this.createHostedFieldsInstance(e),this.canMakeApplePayPayment(e.merchantId).then(t=>{t?(document.querySelector("#apple-pay-info-message").style.display="none",document.querySelector("#apple-pay-error-message").style.display="inline",document.querySelector("#apple-pay-error-message").textContent=document.querySelector("#apple-pay-termes-of-service-error-message").textContent,this._applePayInstance=this.createApplePayInstance(e),this.handleTermsOfService(),this.handleApplePayEvents()):(document.querySelector("#apple-pay-info-message").style.display="",document.querySelector("#apple-pay-error-message").style.display="none")})}handleApplePayEvents(){this._applePayInstance.on("paymentAuthorized",e=>{let t={payment_product:e.brand,token:e.token,brand:e.brand,"card_expiry-month":e.cardExpiryMonth,"card_expiry-year":e.cardExpiryYear,card_holder:e.cardHolder,pan:e.cardPan,issuer:e.cardIssuer,country:e.cardCountry};document.querySelector("#hipay-response").setAttribute("value",JSON.stringify(t)),this._form.submit(),this._applePayInstance.completePaymentWithSuccess()}),this._applePayInstance.on("paymentUnauthorized",function(){this.completePaymentWithFailure()})}handleTermsOfService(){this.checkTermeOfService(),document.querySelector("input[name=tos]").addEventListener("change",()=>{this.checkTermeOfService()})}checkTermeOfService(){let e=document.querySelector("#tos"),t=document.querySelector("#apple-pay-button"),n=document.querySelector("#apple-pay-error-message"),a=document.querySelector("#apple-pay-termes-of-service-error-message");!e||e.checked?(t.style.display="",n.style.display="none"):(t.style.display="none",n.style.display="inline",n.textContent=a.textContent)}canMakeApplePayPayment(e){return new Promise(t=>{e?this._hfInstance.canMakePaymentsWithActiveCard(e).then(e=>{t(e)}):t(window.ApplePaySession&&window.ApplePaySession.canMakePayments())})}createHostedFieldsInstance(e){return new HiPay({username:e.api_apple_pay_username,password:e.api_apple_pay_password,environment:e.environment,lang:e.language_iso_code})}createApplePayInstance(e){let t={label:"Total",amount:e.totalAmount},n={countryCode:e.countryCode,currencyCode:e.currency,total:t,supportedNetworks:["visa","masterCard"]},a={type:e.buttonType,color:e.buttonStyle},s={displayName:e.shopName,request:n,applePayStyle:a,selector:"apple-pay-button"};return this._hfInstance.create("paymentRequestButton",s)}}a.options={username:null,password:null,environment:null,lang:null,idResponse:"hipay-response",cvcHelp:!1,errorClass:"is-invalid",errorPrefix:"error",styles:null,merchantId:null}}}]);